// File name: projects/09/Snake/SnakeMoving.jack

/**
 * Implements the Snake Square.
 * A Snake has a screen location and a size. 
 * It also has methods for drawing, erasing, moving on the 
 * screen, and changing its size.
 */

class SnakeMoving 
{

    // Location on the screen
    field int x, y;

    // The size of the square
    field int size;

    /** Constructs a new Snake with a given location and size. */
    constructor SnakeMoving new(int Ax, int Ay, int Asize) 
    {
        let x = Ax;
        let y = Ay;
        let size = Asize;
        do draw();
        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() 
    {
        do Memory.deAlloc(this);
        return;
    }

	method int getX() 
    {
        return x;
    }

    method int getY() 
    {
        return y;
    }

	method int getSize()
    {
		return size;
	}

    /** Draws the Snake on the screen. */
    method void draw() 
    {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    /** Erases the Snake from the screen. */
    method void erase() 
    {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    /** The size of snake will be smaller and smaller by 2. */
    method void Smaller() 
    {
        do erase();
        let size = size - 2;
        do draw();
        return;
	}

    /** Moves up by 1 pixel. */
    method void moveUp() 
    {
        if (y > 0) 
        {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, (y + size) - 1, x + size, y + size);
            let y = y - 1;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + size, y + 1);
        }
        return;
    }

    /** Moves down by 1 pixel. */
    method void moveDown() 
    {
        if ((y + size) < 256) 
        {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + size, y + 1);
            let y = y + 1;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, (y + size) - 1, x + size, y + size);
        }
        return;
    }

    /** Moves left by 1 pixel. */
    method void moveLeft() 
    {
        if (x > 0) 
        {
            do Screen.setColor(false);
            do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);
            let x = x - 1;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + 1, y + size);
        }
        return;
    }

    /** Moves right by 1 pixel. */
    method void moveRight() 
    {
        if ((x + size) < 512) 
        {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + 1, y + size);
            let x = x + 1;
            do Screen.setColor(true);
            do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);
        }
        return;
    }
}