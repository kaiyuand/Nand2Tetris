// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A basic math library.
 */
class Math {

    //Define a array storing the 2^i
    static Array twoToThe;

    /** Initializes the library. */
    function void init() 
    {
	var int index,number;
	let twoToThe = Array.new(16);
      	let index = 0;
      	let number = 1;
      	while (index < 16) 
	{
	    //let array[i]=2^i
            let twoToThe[index] = number;
	    //multiply 2 every time
            let number = number + number;
            let index = index + 1;
      	}
      	return;
    }

    //The function that get every bit of a number(1 or 0)
    function boolean bit(int number, int index) 
    {
      	return twoToThe[index] & number > 0;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) 
    {
	if( x < 0 ) 
	{
            let x = -x;
        }
        return x;
    }

    /** Returns the product of x and y. */
    function int multiply(int x, int y) 
    {
	var int sum, shifted;
	var int index;
	var int nx, ny;
	let nx = Math.abs(x);
      	let ny = Math.abs(y);
      	let shifted = nx;
      	while (index < 16) 
	{
            if (Math.bit(ny, index)) 
	    {
            	let sum = sum + shifted;
            }
	    let shifted = shifted + shifted;
            let index = index + 1;
      	}
	if ((x < 0 & y > 0) | (x > 0 & y < 0)) 
	{
            let sum = -sum;
      	}
      	return sum;
    }

    /** Returns the integer part of x/y. */
    function int divide(int x, int y) 
    {
	var int flagx, flagy;
        var int q;
        var int result;
        
        let flagx = x < 0;
        let flagy = y < 0;
        let x = Math.abs(x);
        let y = Math.abs(y);

        if( y > x ) 
	{
            return 0;
        }
        let q = Math.divide(x, y+y);
        if( x-(2*q*y) < y ) 
	{
            let result = q+q;
        }
        else 
	{
            let result = q+q+1;
        }
        
        if( flagx = flagy ) 
	{
            return result;
        }
        else 
	{
            return -result;
        }
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) 
    {
	var int y, index;
	var int q, q2;
      	let index = 7;
      	while (index > -1) 
	{
            let q = y + twoToThe[index];
            let q2 = q * q;
            if ((q2 > 0) & ((q2 < x) | (q2 = x))) 
	    {
            	let y = q;
            }
            let index = index - 1;
      	}
      	return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) 
    {
	if( a > b ) 
	{
            return a;
        }
        else 
	{
            return b;
        }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) 
    {
	if( a < b ) 
	{
            return a;
        }
        else 
	{
            return b;
        }
    }
}
